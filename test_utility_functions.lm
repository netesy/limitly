// Test utility functions individually

print("=== Utility Functions Test ===");

// Define simple functions for testing
fn add(x: int, y: int) : int {
    return x + y;
}

fn double(x: int) : int {
    return x * 2;
}

print("Functions defined successfully");

// Test compose function
print("\n=== Testing compose function ===");
var composed = compose(double, add);
print("Composed function type: " + typeOf(composed));

// Test curry function
print("\n=== Testing curry function ===");
var curried = curry(add);
print("Curried function type: " + typeOf(curried));

// Test partial function
print("\n=== Testing partial function ===");
var partialAdd5 = partial(add, 5);
print("Partial function type: " + typeOf(partialAdd5));

print("\n=== Utility functions test completed! ===");