// Test file for self keyword and member access

class BankAccount {
    var balance: float = 0.0
    
    fn deposit(amount: float) -> float {
        self.balance = self.balance + amount
        return self.balance
    }
    
    fn withdraw(amount: float) -> float {
        if amount > self.balance {
            print("Insufficient funds!")
            return self.balance
        }
        self.balance = self.balance - amount
        return amount
    }
}

// Test the BankAccount
fn test_bank_account() {
    var account = BankAccount()
    
    // Test deposit
    account.deposit(100.0)
    print("Balance after deposit: {account.balance}")  // Should be 100.0
    
    // Test withdraw
    var withdrawn = account.withdraw(30.0)
    print("Withdrawn: {withdrawn}")  // Should be 30.0
    print("Balance after withdrawal: {account.balance}")  // Should be 70.0
    
    // Test insufficient funds
    var failed_withdraw = account.withdraw(100.0)  // Should print "Insufficient funds!"
    print("Failed withdrawal: {failed_withdraw}")  // Should be 70.0 (unchanged)
}

test_bank_account()
