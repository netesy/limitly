// Simple test for error pattern matching

fn divide(a: int, b: int): int?DivisionByZero {
    if (b == 0) {
        return err(DivisionByZero("Cannot divide by zero"));
    }
    return ok(a / b);
}

fn testPattern(result: int?DivisionByZero): str {
    match (result) {
        val x => "Success: " + x,
        err e => "Error occurred"
    }
}

var result1 = divide(10, 2);
var result2 = divide(10, 0);

print(testPattern(result1));
print(testPattern(result2));