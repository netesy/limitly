AST for test_destructuring.lm
========================================

AST Dump:
==========
PrintStatement:
  Literal: "=== Testing Destructuring Patterns ==="
FunctionDeclaration: test_dict_destructuring
  Body:
    BlockStatement:
      VarDeclaration: person
        Type: dict
        Initializer:
          DictionaryExpression: {3 entries}
            Key:
              Variable: name
            Value:
              Literal: "John"
            Key:
              Variable: age
            Value:
              Literal: 30
            Key:
              Variable: city
            Value:
              Literal: "NYC"
      MatchStatement:
        Value:
          Variable: person
        Cases:
          Case:
            Pattern:
            DictPattern: {2 fields}
              Field: name
              Field: age
            Body:
            BlockStatement:
              PrintStatement:
                InterpolatedString:
                  String: "Name: "
                  Expression:
                    Variable: name
                  String: ", Age: "
                  Expression:
                    Variable: age
          Case:
            Pattern:
            Literal: nil
            Body:
            BlockStatement:
              PrintStatement:
                Literal: "No match"
FunctionDeclaration: test_list_destructuring
  Body:
    BlockStatement:
      VarDeclaration: numbers
        Type: list
        Initializer:
          ListExpression: [3 elements]
            Literal: 1
            Literal: 2
            Literal: 3
      MatchStatement:
        Value:
          Variable: numbers
        Cases:
          Case:
            Pattern:
            ListPattern: [3 elements]
              Variable: x
              Variable: y
              Variable: z
            Body:
            BlockStatement:
              PrintStatement:
                InterpolatedString:
                  String: "Three numbers: "
                  Expression:
                    Variable: x
                  String: ", "
                  Expression:
                    Variable: y
                  String: ", "
                  Expression:
                    Variable: z
          Case:
            Pattern:
            ListPattern: [2 elements]
              Variable: x
              Variable: y
            Body:
            BlockStatement:
              PrintStatement:
                InterpolatedString:
                  String: "Two numbers: "
                  Expression:
                    Variable: x
                  String: ", "
                  Expression:
                    Variable: y
          Case:
            Pattern:
            ListPattern: [0 elements]
            Body:
            BlockStatement:
              PrintStatement:
                Literal: "Empty list"
          Case:
            Pattern:
            Literal: nil
            Body:
            BlockStatement:
              PrintStatement:
                Literal: "Other list"
FunctionDeclaration: test_tuple_destructuring
  Body:
    BlockStatement:
      VarDeclaration: point
        Type: list
        Initializer:
          ListExpression: [2 elements]
            Literal: 10
            Literal: 20
      MatchStatement:
        Value:
          Variable: point
        Cases:
          Case:
            Pattern:
            TuplePattern: (2 elements)
              Variable: x
              Variable: y
            Body:
            BlockStatement:
              PrintStatement:
                InterpolatedString:
                  String: "Point: ("
                  Expression:
                    Variable: x
                  String: ", "
                  Expression:
                    Variable: y
                  String: ")"
          Case:
            Pattern:
            Literal: nil
            Body:
            BlockStatement:
              PrintStatement:
                Literal: "Not a point"
PrintStatement:
  Literal: "Testing dictionary destructuring:"
ExpressionStatement:
  CallExpression:
    Callee:
      Variable: test_dict_destructuring
PrintStatement:
  Literal: "Testing list destructuring:"
ExpressionStatement:
  CallExpression:
    Callee:
      Variable: test_list_destructuring
PrintStatement:
  Literal: "Testing tuple destructuring:"
ExpressionStatement:
  CallExpression:
    Callee:
      Variable: test_tuple_destructuring
PrintStatement:
  Literal: "=== Destructuring Tests Complete ==="
