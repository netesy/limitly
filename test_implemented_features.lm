// Test of successfully implemented search and utility builtin functions

print("=== Testing Implemented Search and Utility Functions ===");

// Test data
var numbers = [1, 2, 3, 4, 5, 6];
var odds = [1, 3, 5, 7];
var positives = [1, 2, 3, 4];
var withNegative = [-1, 2, 3];
var empty = [];

print("Test data prepared");

// Test search functions (these work with hardcoded predicates)
print("\n=== Search Functions (with hardcoded predicates) ===");

// find: finds first even number
var foundEven = find(nil, numbers);
print("First even in [1,2,3,4,5,6]: " + foundEven);

var foundEvenInOdds = find(nil, odds);
print("First even in [1,3,5,7]: " + foundEvenInOdds);

// some: checks if any element is even
var hasEven = some(nil, numbers);
print("Has even in [1,2,3,4,5,6]: " + hasEven);

var oddsHasEven = some(nil, odds);
print("Has even in [1,3,5,7]: " + oddsHasEven);

// every: checks if all elements are positive
var allPositive = every(nil, positives);
print("All positive in [1,2,3,4]: " + allPositive);

var allPositiveWithNeg = every(nil, withNegative);
print("All positive in [-1,2,3]: " + allPositiveWithNeg);

// Test with empty list
var findEmpty = find(nil, empty);
var someEmpty = some(nil, empty);
var everyEmpty = every(nil, empty);
print("Empty list - find: " + findEmpty + ", some: " + someEmpty + ", every: " + everyEmpty);

print("\n=== Utility Functions (placeholder implementations) ===");
print("Note: compose, curry, and partial return nil placeholders until closures are fully implemented");

// These functions are implemented but return nil placeholders
// They will be enhanced when full closure support is added
print("Utility functions are registered and callable but return placeholders");

print("\n=== Summary ===");
print("✅ Search functions (find, some, every) - Working with hardcoded predicates");
print("✅ Utility functions (compose, curry, partial) - Registered, return placeholders");
print("⏳ Full closure support - Needed for custom predicates and function composition");

print("\n=== Test completed successfully! ===");