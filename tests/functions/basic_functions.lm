// Test basic function declarations and calls (if implemented)
print("=== Basic Function Tests ===");

// Simple function without parameters
fn greet() {
    print("Hello from function!");
}

print("Calling greet():");
greet();

// Function with parameters
fn add(a: int, b: int): int {
    return a + b;
}

print("Function with parameters:");
var result: int = add(5, 3);
print("add(5, 3) = {result}");

// Function with return value
fn square(x: int): int {
    return x * x;
}

print("Square function:");
print("square(4) = {square(4)}");
print("square(7) = {square(7)}");

//Function with optional parameters
fn greet_optional(name: str = "Guest"): nil {
    print("Hello, {name}!");
}
print("Function with optional parameters:");
greet_optional("Alice");
greet_optional();

// Function with local variables
fn calculate(x: int, y: int): int {
    var sum: int = x + y;
    var product: int = x * y;
    print("Local calculations: sum={sum}, product={product}");
    return sum * product;
}

print("Function with locals:");
var calc_result: int = calculate(3, 4);
print("Result: {calc_result}");

// Recursive function
fn factorial_main(n: int): int {
    if (n <= 1) {
        return 1;
    }
    return n * factorial_main(n - 1);
}

print("Recursive function:");
print("factorial(5) = {factorial_main(5)}");


// Additional function tests
fn subtract(a: int, b: int): int {
    return a - b;
}

fn factorial(n: int): int {
    if (n <= 1) { return 1; }
    return n * factorial(n - 1);
}

fn is_even(n: int): bool {
    return n % 2 == 0;
}

fn is_odd(n: int): bool {
    return !is_even(n);
}

fn is_prime(n: int): bool {
    if (n <= 1) { return false; }
    if (n == 2) { return true; }
    if (is_even(n)) { return false; }

    var i: int = 3;
    while (i * i <= n) {
        if (n % i == 0) { return false; }
        i += 2;
    }
    return true;
}

print("Additional function tests:");
print("subtract(10, 3) = {subtract(10, 3)}");
print("factorial(4) = {factorial(4)}");
print("is_even(6) = {is_even(6)}");
print("is_odd(7) = {is_odd(7)}");
print("is_prime(17) = {is_prime(17)}");