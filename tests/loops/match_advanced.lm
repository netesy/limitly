print("=== Advanced Match Statement Tests ===");

// Test case 1: Record destructuring
fn test_record_destructuring(value) {
    match(value) {
        {name, age} => { print("Name: {name}, Age: {age}"); },
        {name, age, city} => { print("Name: {name}, Age: {age}, City: {city}"); }
    }
}
test_record_destructuring({name: "John", age: 30});
test_record_destructuring({name: "Joan", age: 26, city: "New York"});


// Test case 2: List destructuring
fn test_list_destructuring(value) {
    match(value) {
        [] => { print("Empty list"); },
        [x] => { print("One element: {x}"); },
        [x, y] => { print("Two elements: {x}, {y}"); },
        [head, ...tail] => { print("Head: {head}, Tail: {tail}"); }
    }
}

test_list_destructuring([]);
test_list_destructuring([1]);
test_list_destructuring([1, 2]);
test_list_destructuring([1, 2, 3]);


// Test case 3: Guards
fn test_guards(value) {
    match(value) {
        x where x > 10 => { print("{x} is greater than 10"); },
        x where x < 10 => { print("{x} is less than 10"); },
        x => { print("{x} is 10"); }
    }
}

test_guards(5);
test_guards(10);
test_guards(15);


