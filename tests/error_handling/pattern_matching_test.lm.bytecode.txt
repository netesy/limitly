Bytecode for C:\Projects\limitly\tests\error_handling\pattern_matching_test.lm
Parser: New CSTParser
========================================

=== Bytecode ===
Generated 408 instructions

   0: BEGIN_FUNCTION       "divide"
   1: DEFINE_PARAM        
   2: DEFINE_PARAM        
   3: BEGIN_SCOPE         
   4: LOAD_VAR             "b"
   5: PUSH_INT             0
   6: EQUAL               
   7: JUMP_IF_FALSE        6
   8: BEGIN_SCOPE         
   9: PUSH_STRING          "Cannot divide by zero"
  10: CONSTRUCT_ERROR     
  11: RETURN              
  12: END_SCOPE           
  13: JUMP                 0
  14: LOAD_VAR             "a"
  15: LOAD_VAR             "b"
  16: DIVIDE              
  17: CONSTRUCT_OK        
  18: RETURN              
  19: END_SCOPE           
  20: PUSH_NULL           
  21: RETURN              
  22: END_FUNCTION        
  23: PUSH_FUNCTION       
  24: STORE_VAR            "divide"
  25: BEGIN_FUNCTION       "processResult"
  26: DEFINE_PARAM        
  27: BEGIN_SCOPE         
  28: LOAD_VAR             "result"
  29: STORE_TEMP          
  30: LOAD_TEMP           
  31: PUSH_STRING          "__val_pattern__"
  32: PUSH_STRING          "x"
  33: MATCH_PATTERN       
  34: JUMP_IF_FALSE        5
  35: PUSH_STRING          "Success: "
  36: LOAD_VAR             "x"
  37: ADD                 
  38: POP                 
  39: JUMP                 12
  40: LOAD_TEMP           
  41: PUSH_STRING          "__err_pattern__"
  42: PUSH_STRING          "e"
  43: PUSH_NULL           
  44: MATCH_PATTERN       
  45: JUMP_IF_FALSE        6
  46: PUSH_STRING          "Error: "
  47: LOAD_VAR             "e"
  48: GET_PROPERTY         "message"
  49: ADD                 
  50: POP                 
  51: JUMP                 0
  52: CLEAR_TEMP          
  53: END_SCOPE           
  54: PUSH_NULL           
  55: RETURN              
  56: END_FUNCTION        
  57: PUSH_FUNCTION       
  58: STORE_VAR            "processResult"
  59: BEGIN_FUNCTION       "processResultSpecific"
  60: DEFINE_PARAM        
  61: BEGIN_SCOPE         
  62: LOAD_VAR             "result"
  63: STORE_TEMP          
  64: LOAD_TEMP           
  65: PUSH_STRING          "__val_pattern__"
  66: PUSH_STRING          "x"
  67: MATCH_PATTERN       
  68: JUMP_IF_FALSE        5
  69: PUSH_STRING          "Success: "
  70: LOAD_VAR             "x"
  71: ADD                 
  72: POP                 
  73: JUMP                 12
  74: LOAD_TEMP           
  75: PUSH_STRING          "__error_type_pattern__"
  76: PUSH_STRING          "DivisionByZero"
  77: PUSH_INT             1
  78: PUSH_STRING          "msg"
  79: MATCH_PATTERN       
  80: JUMP_IF_FALSE        5
  81: PUSH_STRING          "Division error: "
  82: LOAD_VAR             "msg"
  83: ADD                 
  84: POP                 
  85: JUMP                 0
  86: CLEAR_TEMP          
  87: END_SCOPE           
  88: PUSH_NULL           
  89: RETURN              
  90: END_FUNCTION        
  91: PUSH_FUNCTION       
  92: STORE_VAR            "processResultSpecific"
  93: BEGIN_FUNCTION       "processMultipleErrors"
  94: DEFINE_PARAM        
  95: BEGIN_SCOPE         
  96: LOAD_VAR             "result"
  97: STORE_TEMP          
  98: LOAD_TEMP           
  99: PUSH_STRING          "__val_pattern__"
 100: PUSH_STRING          "x"
 101: MATCH_PATTERN       
 102: JUMP_IF_FALSE        5
 103: PUSH_STRING          "Success: "
 104: LOAD_VAR             "x"
 105: ADD                 
 106: POP                 
 107: JUMP                 24
 108: LOAD_TEMP           
 109: PUSH_STRING          "__error_type_pattern__"
 110: PUSH_STRING          "DivisionByZero"
 111: PUSH_INT             1
 112: PUSH_STRING          "msg"
 113: MATCH_PATTERN       
 114: JUMP_IF_FALSE        5
 115: PUSH_STRING          "Division error: "
 116: LOAD_VAR             "msg"
 117: ADD                 
 118: POP                 
 119: JUMP                 12
 120: LOAD_TEMP           
 121: PUSH_STRING          "__error_type_pattern__"
 122: PUSH_STRING          "IndexOutOfBounds"
 123: PUSH_INT             1
 124: PUSH_STRING          "msg"
 125: MATCH_PATTERN       
 126: JUMP_IF_FALSE        5
 127: PUSH_STRING          "Index error: "
 128: LOAD_VAR             "msg"
 129: ADD                 
 130: POP                 
 131: JUMP                 0
 132: CLEAR_TEMP          
 133: END_SCOPE           
 134: PUSH_NULL           
 135: RETURN              
 136: END_FUNCTION        
 137: PUSH_FUNCTION       
 138: STORE_VAR            "processMultipleErrors"
 139: BEGIN_FUNCTION       "testGenericErrorPattern"
 140: BEGIN_SCOPE         
 141: PUSH_INT             10
 142: PUSH_INT             2
 143: CALL                 "divide"
 144: STORE_VAR            "result1"
 145: PUSH_INT             10
 146: PUSH_INT             0
 147: CALL                 "divide"
 148: STORE_VAR            "result2"
 149: LOAD_VAR             "result1"
 150: CALL                 "processResult"
 151: PRINT               
 152: LOAD_VAR             "result2"
 153: CALL                 "processResult"
 154: PRINT               
 155: END_SCOPE           
 156: PUSH_NULL           
 157: RETURN              
 158: END_FUNCTION        
 159: PUSH_FUNCTION       
 160: STORE_VAR            "testGenericErrorPattern"
 161: BEGIN_FUNCTION       "testSpecificErrorPattern"
 162: BEGIN_SCOPE         
 163: PUSH_INT             10
 164: PUSH_INT             2
 165: CALL                 "divide"
 166: STORE_VAR            "result1"
 167: PUSH_INT             10
 168: PUSH_INT             0
 169: CALL                 "divide"
 170: STORE_VAR            "result2"
 171: LOAD_VAR             "result1"
 172: CALL                 "processResultSpecific"
 173: PRINT               
 174: LOAD_VAR             "result2"
 175: CALL                 "processResultSpecific"
 176: PRINT               
 177: END_SCOPE           
 178: PUSH_NULL           
 179: RETURN              
 180: END_FUNCTION        
 181: PUSH_FUNCTION       
 182: STORE_VAR            "testSpecificErrorPattern"
 183: BEGIN_FUNCTION       "testNestedErrorPatterns"
 184: BEGIN_SCOPE         
 185: BEGIN_FUNCTION       "processNested"
 186: DEFINE_PARAM        
 187: BEGIN_SCOPE         
 188: LOAD_VAR             "outer"
 189: STORE_TEMP          
 190: LOAD_TEMP           
 191: PUSH_STRING          "__val_pattern__"
 192: PUSH_STRING          "x"
 193: MATCH_PATTERN       
 194: JUMP_IF_FALSE        32
 195: BEGIN_SCOPE         
 196: LOAD_VAR             "x"
 197: PUSH_INT             2
 198: CALL                 "divide"
 199: STORE_VAR            "inner"
 200: LOAD_VAR             "inner"
 201: STORE_TEMP          
 202: LOAD_TEMP           
 203: PUSH_STRING          "__val_pattern__"
 204: PUSH_STRING          "y"
 205: MATCH_PATTERN       
 206: JUMP_IF_FALSE        5
 207: PUSH_STRING          "Nested success: "
 208: LOAD_VAR             "y"
 209: ADD                 
 210: POP                 
 211: JUMP                 12
 212: LOAD_TEMP           
 213: PUSH_STRING          "__err_pattern__"
 214: PUSH_STRING          "e"
 215: PUSH_NULL           
 216: MATCH_PATTERN       
 217: JUMP_IF_FALSE        6
 218: PUSH_STRING          "Nested error: "
 219: LOAD_VAR             "e"
 220: GET_PROPERTY         "message"
 221: ADD                 
 222: POP                 
 223: JUMP                 0
 224: CLEAR_TEMP          
 225: END_SCOPE           
 226: JUMP                 12
 227: LOAD_TEMP           
 228: PUSH_STRING          "__err_pattern__"
 229: PUSH_STRING          "e"
 230: PUSH_NULL           
 231: MATCH_PATTERN       
 232: JUMP_IF_FALSE        6
 233: PUSH_STRING          "Outer error: "
 234: LOAD_VAR             "e"
 235: GET_PROPERTY         "message"
 236: ADD                 
 237: POP                 
 238: JUMP                 0
 239: CLEAR_TEMP          
 240: END_SCOPE           
 241: PUSH_NULL           
 242: RETURN              
 243: END_FUNCTION        
 244: PUSH_FUNCTION       
 245: STORE_VAR            "processNested"
 246: PUSH_INT             10
 247: PUSH_INT             2
 248: CALL                 "divide"
 249: STORE_VAR            "result1"
 250: PUSH_INT             10
 251: PUSH_INT             0
 252: CALL                 "divide"
 253: STORE_VAR            "result2"
 254: LOAD_VAR             "result1"
 255: CALL                 "processNested"
 256: PRINT               
 257: LOAD_VAR             "result2"
 258: CALL                 "processNested"
 259: PRINT               
 260: END_SCOPE           
 261: PUSH_NULL           
 262: RETURN              
 263: END_FUNCTION        
 264: PUSH_FUNCTION       
 265: STORE_VAR            "testNestedErrorPatterns"
 266: BEGIN_FUNCTION       "testErrorPatternWithGuards"
 267: BEGIN_SCOPE         
 268: BEGIN_FUNCTION       "processWithGuard"
 269: DEFINE_PARAM        
 270: BEGIN_SCOPE         
 271: LOAD_VAR             "result"
 272: STORE_TEMP          
 273: LOAD_TEMP           
 274: PUSH_STRING          "__val_pattern__"
 275: PUSH_STRING          "x"
 276: MATCH_PATTERN       
 277: JUMP_IF_FALSE        9
 278: LOAD_VAR             "x"
 279: PUSH_INT             5
 280: GREATER             
 281: JUMP_IF_FALSE        5
 282: PUSH_STRING          "Large success: "
 283: LOAD_VAR             "x"
 284: ADD                 
 285: POP                 
 286: JUMP                 22
 287: LOAD_TEMP           
 288: PUSH_STRING          "__val_pattern__"
 289: PUSH_STRING          "x"
 290: MATCH_PATTERN       
 291: JUMP_IF_FALSE        5
 292: PUSH_STRING          "Small success: "
 293: LOAD_VAR             "x"
 294: ADD                 
 295: POP                 
 296: JUMP                 12
 297: LOAD_TEMP           
 298: PUSH_STRING          "__err_pattern__"
 299: PUSH_STRING          "e"
 300: PUSH_NULL           
 301: MATCH_PATTERN       
 302: JUMP_IF_FALSE        6
 303: PUSH_STRING          "Error: "
 304: LOAD_VAR             "e"
 305: GET_PROPERTY         "message"
 306: ADD                 
 307: POP                 
 308: JUMP                 0
 309: CLEAR_TEMP          
 310: END_SCOPE           
 311: PUSH_NULL           
 312: RETURN              
 313: END_FUNCTION        
 314: PUSH_FUNCTION       
 315: STORE_VAR            "processWithGuard"
 316: PUSH_INT             20
 317: PUSH_INT             2
 318: CALL                 "divide"
 319: STORE_VAR            "result1"
 320: PUSH_INT             6
 321: PUSH_INT             2
 322: CALL                 "divide"
 323: STORE_VAR            "result2"
 324: PUSH_INT             10
 325: PUSH_INT             0
 326: CALL                 "divide"
 327: STORE_VAR            "result3"
 328: LOAD_VAR             "result1"
 329: CALL                 "processWithGuard"
 330: PRINT               
 331: LOAD_VAR             "result2"
 332: CALL                 "processWithGuard"
 333: PRINT               
 334: LOAD_VAR             "result3"
 335: CALL                 "processWithGuard"
 336: PRINT               
 337: END_SCOPE           
 338: PUSH_NULL           
 339: RETURN              
 340: END_FUNCTION        
 341: PUSH_FUNCTION       
 342: STORE_VAR            "testErrorPatternWithGuards"
 343: BEGIN_FUNCTION       "testExhaustiveMatching"
 344: BEGIN_SCOPE         
 345: BEGIN_FUNCTION       "exhaustive"
 346: DEFINE_PARAM        
 347: BEGIN_SCOPE         
 348: LOAD_VAR             "result"
 349: STORE_TEMP          
 350: LOAD_TEMP           
 351: PUSH_STRING          "__val_pattern__"
 352: PUSH_STRING          "x"
 353: MATCH_PATTERN       
 354: JUMP_IF_FALSE        5
 355: PUSH_STRING          "Success: "
 356: LOAD_VAR             "x"
 357: ADD                 
 358: POP                 
 359: JUMP                 12
 360: LOAD_TEMP           
 361: PUSH_STRING          "__err_pattern__"
 362: PUSH_STRING          "e"
 363: PUSH_NULL           
 364: MATCH_PATTERN       
 365: JUMP_IF_FALSE        6
 366: PUSH_STRING          "Error: "
 367: LOAD_VAR             "e"
 368: GET_PROPERTY         "message"
 369: ADD                 
 370: POP                 
 371: JUMP                 0
 372: CLEAR_TEMP          
 373: END_SCOPE           
 374: PUSH_NULL           
 375: RETURN              
 376: END_FUNCTION        
 377: PUSH_FUNCTION       
 378: STORE_VAR            "exhaustive"
 379: END_SCOPE           
 380: PUSH_NULL           
 381: RETURN              
 382: END_FUNCTION        
 383: PUSH_FUNCTION       
 384: STORE_VAR            "testExhaustiveMatching"
 385: BEGIN_FUNCTION       "main"
 386: BEGIN_SCOPE         
 387: PUSH_STRING          "Testing error pattern matching..."
 388: PRINT               
 389: CALL                 "testGenericErrorPattern"
 390: POP                 
 391: CALL                 "testSpecificErrorPattern"
 392: POP                 
 393: CALL                 "testNestedErrorPatterns"
 394: POP                 
 395: CALL                 "testErrorPatternWithGuards"
 396: POP                 
 397: CALL                 "testExhaustiveMatching"
 398: POP                 
 399: PUSH_STRING          "Error pattern matching tests completed!"
 400: PRINT               
 401: END_SCOPE           
 402: PUSH_NULL           
 403: RETURN              
 404: END_FUNCTION        
 405: PUSH_FUNCTION       
 406: STORE_VAR            "main"
 407: HALT                

