AST for C:\Projects\limitly\tests\expressions\large_literals.lm
Parser: New CSTParser (cst_parser.cpp)
Mode: CST with AST compatibility
Note: CST nodes were created internally with trivia preservation
      AST output shown below for compatibility testing
========================================

AST Dump:
==========
VarDeclaration: maxI64
  Type: i64
  Initializer:
    Literal: 9223372036854775807
VarDeclaration: maxU64
  Type: u64
  Initializer:
    Literal: 1.84467440737096e+19
VarDeclaration: largeFloat
  Type: f64
  Initializer:
    Literal: 1.79769313486232e+308
PrintStatement:
  Literal: "Large literal test:"
PrintStatement:
  Literal: "Max I64:"
  Variable: maxI64
PrintStatement:
  Literal: "Max U64:"
  Variable: maxU64
PrintStatement:
  Literal: "Large Float:"
  Variable: largeFloat
VarDeclaration: smallFloat
  Type: f64
  Initializer:
    Literal: 2.2250738585072e-308
VarDeclaration: tinyFloat
  Type: f64
  Initializer:
    Literal: 1e-1
PrintStatement:
  Literal: "Small literal test:"
PrintStatement:
  Literal: "Small Float:"
  Variable: smallFloat
PrintStatement:
  Literal: "Tiny Float:"
  Variable: tinyFloat
VarDeclaration: negLarge
  Type: i64
  Initializer:
    UnaryExpression: -
      Operand:
        Literal: 9.22337203685478e+18
VarDeclaration: negFloat
  Type: f64
  Initializer:
    UnaryExpression: -
      Operand:
        Literal: 1.79769313486232e+308
PrintStatement:
  Literal: "Negative large literal test:"
PrintStatement:
  Literal: "Negative Large I64:"
  Variable: negLarge
PrintStatement:
  Literal: "Negative Large Float:"
  Variable: negFloat
