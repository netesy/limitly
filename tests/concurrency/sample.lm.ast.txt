AST for C:\Projects\limitly\tests\concurrency\sample.lm
Parser: New CSTParser (cst_parser.cpp)
Mode: CST with AST compatibility
Note: CST nodes were created internally with trivia preservation
      AST output shown below for compatibility testing
========================================

AST Dump:
==========
PrintStatement:
  Literal: "=== Concurrency Smoke Test ==="
VarDeclaration: counter
  Type: atomic
  Initializer:
    Literal: 0
ConcurrentStatement:
  BlockStatement:
    TaskStatement
      Body:
        BlockStatement:
          ExpressionStatement:
            Assignment: +=
              Target: counter
              Value:
              Literal: 1
          PrintStatement:
            InterpolatedString:
              String: ""
              Expression:
                Variable: counter
              String: "\"Task 1 completed with counter value: {counter}"
    TaskStatement
      Body:
        BlockStatement:
          ExpressionStatement:
            Assignment: +=
              Target: counter
              Value:
              Literal: 1
          PrintStatement:
            InterpolatedString:
              String: ""
              Expression:
                Variable: counter
              String: "\"Task 2 completed with counter value: {counter}"
    TaskStatement
      Body:
        BlockStatement:
          ExpressionStatement:
            Assignment: +=
              Target: counter
              Value:
              Literal: 1
          PrintStatement:
            InterpolatedString:
              String: ""
              Expression:
                Variable: counter
              String: "\"Task 3 completed with counter value: {counter}"
    TaskStatement
      Body:
        BlockStatement:
          ExpressionStatement:
            Assignment: +=
              Target: counter
              Value:
              Literal: 1
          PrintStatement:
            InterpolatedString:
              String: ""
              Expression:
                Variable: counter
              String: "\"Task 4 completed with counter value: {counter}"
VarDeclaration: messages
  Initializer:
    CallExpression:
      Callee:
        Variable: channel
VarDeclaration: counters
  Type: atomic
  Initializer:
    Literal: 0
ConcurrentStatement:
  BlockStatement:
    TaskStatement
      LoopVar: i
      Iterable:
        RangeExpression:
          Start:
            Literal: 1
          End:
            Literal: 3
          Inclusive: true
      Body:
        BlockStatement:
          ExpressionStatement:
            Assignment: +=
              Target: counters
              Value:
              Literal: 1
          PrintStatement:
            InterpolatedString:
              String: ""
              Expression:
                Variable: counters
              String: " running"
PrintStatement:
  Literal: "Waiting for tasks to complete..."
PrintStatement:
  InterpolatedString:
    String: ""
    Expression:
      Variable: counter
    String: "\"Final counter value: {counter}"
PrintStatement:
  Literal: "Smoke test finished"
