AST for C:\Projects\limitly\tests\concurrency\atomic_increment.lm
Parser: New CSTParser (cst_parser.cpp)
Mode: CST with AST compatibility
Note: CST nodes were created internally with trivia preservation
      AST output shown below for compatibility testing
========================================

AST Dump:
==========
VarDeclaration: counter
  Type: atomic
  Initializer:
    Literal: 0
VarDeclaration: ch
  Initializer:
    CallExpression:
      Callee:
        Variable: channel
ConcurrentStatement:
  BlockStatement:
    TaskStatement
      LoopVar: i
      Iterable:
        RangeExpression:
          Start:
            Literal: 1
          End:
            Literal: 10
          Inclusive: true
      Body:
        BlockStatement:
          ExpressionStatement:
            Assignment: +=
              Target: counter
              Value:
              Literal: 1
          ExpressionStatement:
            CallExpression:
              Callee:
                MemberExpression: .send
                  Object:
                    Variable: ch
              Arguments:
                Variable: counter
VarDeclaration: seen
  Initializer:
    Literal: 0
IterStatement:
  Variables: v
  Iterable:
    Variable: ch
  Body:
    BlockStatement:
      PrintStatement:
        InterpolatedString:
          String: ""
          Expression:
            Variable: v
          String: "\"Value from channel: {v}"
      ExpressionStatement:
        Assignment: +=
          Target: seen
          Value:
          Literal: 1
      IfStatement:
        Condition:
          BinaryExpression: >=
            Left:
              Variable: seen
            Operator: >=
            Right:
              Literal: 10
        Then:
          BreakStatement
PrintStatement:
  InterpolatedString:
    String: ""
    Expression:
      Variable: counter
    String: "\"Final counter: {counter}"
