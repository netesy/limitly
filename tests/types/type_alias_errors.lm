// Test for type alias error handling and edge cases
// Tests proper error reporting for invalid type alias usage

// Test 1: Valid type alias usage
type ValidType = i64;
var validVar: ValidType = 42;
print("Valid type alias:", validVar);

// Test 2: Type alias with different primitive types
type IntType = i64;
type FloatType = f64;
type StringType = str;
type BoolType = bool;

var intVal: IntType = 100;
var floatVal: FloatType = 3.14159;
var stringVal: StringType = "test";
var boolVal: BoolType = false;

print("Multiple type aliases:");
print("Int:", intVal);
print("Float:", floatVal);
print("String:", stringVal);
print("Bool:", boolVal);

// Test 3: Type alias in arithmetic operations
type Number = f64;
var num1: Number = 10.5;
var num2: Number = 20.3;
var result: Number = num1 + num2;

print("Arithmetic with type aliases:");
print("Result:", result);

// Test 4: Type alias compatibility within same base type
type Distance = f64;
type Weight = f64;

var distance: Distance = 100.0;
var weight: Weight = 75.5;

print("Same base type aliases:");
print("Distance:", distance);
print("Weight:", weight);

// Note: Tests for undefined type aliases and type mismatches 
// are handled at compile time and would prevent the program from running