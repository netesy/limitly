// Comprehensive test for typed containers

// Test 1: Basic typed list declarations
type IntList = [int];
type StringList = [str];
type FloatList = [float];
type BoolList = [bool];

// Test 2: Basic typed dictionary declarations  
type IntToStringDict = {int: str};
type StringToIntDict = {str: int};
type StringToFloatDict = {str: float};
type IntToFloatDict = {int: float};

// Test 3: Nested typed containers
type ListOfIntLists = [[int]];
type DictOfStringToIntList = {str: [int]};
type ListOfStringToIntDict = [{str: int}];

// Test 4: Variable declarations with typed containers
var numbers: [int] = [1, 2, 3, 4, 5];
var words: [str] = ["hello", "world", "test"];
var flags: [bool] = [true, false, true];
var scores: [float] = [95.5, 87.2, 92.8];

// Test 5: Dictionary variables with typed containers
var ageMap: {str: int} = {"Alice": 25, "Bob": 30, "Charlie": 35};
var priceMap: {int: float} = {1: 9.99, 2: 19.99, 3: 29.99};
var nameMap: {int: str} = {1: "First", 2: "Second", 3: "Third"};

// Test 6: Empty typed containers
var emptyNumbers: [int] = [];
var emptyAges: {str: int} = {};

// Test 7: Complex nested containers
var matrix: [[int]] = [[1, 2], [3, 4], [5, 6]];
var studentGrades: {str: [float]} = {
    "Alice": [95.5, 87.2, 92.8],
    "Bob": [88.1, 91.5, 89.7]
};

print("All typed container tests completed successfully");