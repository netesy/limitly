AST for test_error_syntax.lm
========================================

AST Dump:
==========
FunctionDeclaration: divide
  Parameters:
    a: int
    b: int
  ReturnType: int
  Body:
    BlockStatement:
      IfStatement:
        Condition:
          BinaryExpression: ==
            Left:
              Variable: b
            Operator: ==
            Right:
              Literal: 0
        Then:
          BlockStatement:
            ReturnStatement:
              Value:
                ErrorConstruct: DivisionByZero
      ReturnStatement:
        Value:
          OkConstruct:
            Value:
              BinaryExpression: /
                Left:
                  Variable: a
                Operator: /
                Right:
                  Variable: b
FunctionDeclaration: parseAndDivide
  Parameters:
    s: str
    divisor: int
  ReturnType: int
  Body:
    BlockStatement:
      VarDeclaration: num
        Initializer:
          FallibleExpression:
            Expression:
              CallExpression:
                Callee:
                  Variable: parseInt
                Arguments:
                  Variable: s
      ReturnStatement:
        Value:
          FallibleExpression:
            Expression:
              CallExpression:
                Callee:
                  Variable: divide
                Arguments:
                  Variable: num
                  Variable: divisor
FunctionDeclaration: main
  Body:
    BlockStatement:
      VarDeclaration: result
        Initializer:
          FallibleExpression:
            Expression:
              CallExpression:
                Callee:
                  Variable: divide
                Arguments:
                  Literal: 10
                  Literal: 2
      PrintStatement:
        Variable: result
      VarDeclaration: result2
        Initializer:
          FallibleExpression:
            Expression:
              CallExpression:
                Callee:
                  Variable: divide
                Arguments:
                  Literal: 10
                  Literal: 0
            ElseHandler:
              ErrorVariable: error
              BlockStatement:
                PrintStatement:
                  InterpolatedString:
                    String: "Division failed: "
                    Expression:
                      Variable: error
                    String: "}\""
                ReturnStatement
