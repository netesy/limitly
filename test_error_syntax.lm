// Test error handling syntax parsing

// Function with fallible return type
fn divide(a: int, b: int): int?DivisionByZero {
    if (b == 0) {
        return err(DivisionByZero);
    }
    return ok(a / b);
}

// Function with multiple error types
fn parseAndDivide(s: str, divisor: int): int?ParseError, DivisionByZero {
    var num = parseInt(s)?;
    return divide(num, divisor)?;
}

// Using fallible expressions
fn main() {
    var result = divide(10, 2)?;
    print(result);
    
    var result2 = divide(10, 0)? else error {
        print("Division failed: #{error}");
        return;
    };
}