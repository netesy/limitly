// parser.h
#ifndef PARSER_H
#define PARSER_H

#include "Syntax.h"
#include "opcodes.h"
#include "scanner.h"

class Parser
{
public:
    Parser(Scanner &scanner);
    void parse();
    // Emit method to send data to the IR
    void emit(Opcode opcode, uint32_t lineNumber);

private:
    Scanner &scanner; // Reference to the scanner
    Syntax syntax;    // Instance of Syntax for syntax parsing

    // Vector to hold generated bytecode instructions
    Bytecode bytecode;
    // Token to store the current token being processed
    Token currentToken;

    void advance();
    void consume(TokenType type, const std::string &message);
    void expression();
    void statement();
    void declaration();
    void functionDeclaration();
    void loop();
    void conditional();
    void classDeclaration();
    void variableDeclaration();
    void assignment();
    void primary();
};

#endif // PARSER_H
