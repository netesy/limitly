// Test higher-order builtin functions

// Test map function with a list of numbers
var numbers = [1, 2, 3, 4, 5];
print("Original numbers: " + numbers);

// Test map (currently has placeholder implementation that doubles numbers)
var doubled = map(nil, numbers);
print("Doubled numbers: " + doubled);

// Test filter (currently has placeholder implementation that keeps even numbers)
var evens = filter(nil, numbers);
print("Even numbers: " + evens);

// Test reduce (currently has placeholder implementation that sums numbers)
var sum = reduce(nil, numbers);
print("Sum of numbers: " + sum);

// Test reduce with initial value
var sumWithInitial = reduce(nil, numbers, 10);
print("Sum with initial value 10: " + sumWithInitial);

// Test forEach (currently has placeholder implementation that prints elements)
print("ForEach output:");
forEach(nil, numbers);

// Test find function with different predicates
var firstEven = find("even", numbers);
print("First even number: " + firstEven);

var firstOdd = find("odd", numbers);
print("First odd number: " + firstOdd);

var firstPositive = find("positive", numbers);
print("First positive number: " + firstPositive);

// Test some function
var hasEven = some("even", numbers);
print("Has even numbers: " + hasEven);

var hasNegative = some("negative", numbers);
print("Has negative numbers: " + hasNegative);

// Test every function
var allPositive = every("positive", numbers);
print("All numbers are positive: " + allPositive);

var allEven = every("even", numbers);
print("All numbers are even: " + allEven);

print("Higher-order builtin function tests completed!");