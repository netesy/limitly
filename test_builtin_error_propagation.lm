// Test builtin function error propagation with ? operator

print("Testing builtin function error propagation...");

// Function that uses builtin functions and can propagate errors
fn testBuiltinErrors(input: any): str?BuiltinFunctionError {
    // This should propagate the error from len if input is invalid
    var length = len(input)?;
    return ok("Length is: " + length);
}

// Test with valid input (should work)
print("Test 1: Valid string input");
var result1 = testBuiltinErrors("Hello World");
print("Result: " + result1);

// Test with invalid input (should propagate error)
print("Test 2: Invalid nil input - should propagate error");
var result2 = testBuiltinErrors(nil);
print("Result: " + result2);

// Test with another invalid input (should propagate error)
print("Test 3: Invalid number input - should propagate error");
var result3 = testBuiltinErrors(42);
print("Result: " + result3);

// Function that uses multiple builtin functions
fn testMultipleBuiltins(input: any): str?BuiltinFunctionError {
    var inputType = typeOf(input);
    var length = len(input)?;  // This might fail and propagate error
    return ok("Type: " + inputType + ", Length: " + length);
}

// Test multiple builtin function calls
print("Test 4: Multiple builtin calls with valid input");
var result4 = testMultipleBuiltins([1, 2, 3]);
print("Result: " + result4);

print("Test 5: Multiple builtin calls with invalid input");
var result5 = testMultipleBuiltins(true);
print("Result: " + result5);

print("Builtin function error propagation tests completed!");